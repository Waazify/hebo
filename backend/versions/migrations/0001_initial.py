# Generated by Django 5.1.4 on 2025-02-10 06:54

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("hebo_organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the agent", max_length=255),
                ),
                (
                    "slug",
                    models.SlugField(help_text="Slug of the agent", max_length=255),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization this agent belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agents",
                        to="hebo_organizations.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Version",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Version name (must be in format "v1", "v2", etc.)',
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_version_name",
                                message='Version name must be in format "v" followed by a positive integer (e.g. "v1", "v2")',
                                regex="^v[1-9]\\d*$",
                            )
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("current", "Current"),
                            ("next", "Next"),
                            ("past", "Past"),
                        ],
                        default="current",
                        help_text="Status of this version",
                        max_length=20,
                    ),
                ),
                (
                    "url_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for public access URL",
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        help_text="The agent this version belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="versions.agent",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VersionSlug",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="Slug for accessing this version",
                        max_length=511,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "version",
                    models.ForeignKey(
                        help_text="The version this slug belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slugs",
                        to="versions.version",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="agent",
            constraint=models.UniqueConstraint(
                fields=("organization", "slug"),
                name="unique_agent_slug_per_organization",
            ),
        ),
        migrations.AddConstraint(
            model_name="version",
            constraint=models.UniqueConstraint(
                fields=("agent", "name"), name="unique_version_name_per_agent"
            ),
        ),
        migrations.AddConstraint(
            model_name="version",
            constraint=models.UniqueConstraint(
                condition=models.Q(("status", "current")),
                fields=("agent", "status"),
                name="unique_current_version_per_agent",
            ),
        ),
        migrations.AddConstraint(
            model_name="version",
            constraint=models.UniqueConstraint(
                condition=models.Q(("status", "next")),
                fields=("agent", "status"),
                name="unique_next_version_per_agent",
            ),
        ),
    ]
