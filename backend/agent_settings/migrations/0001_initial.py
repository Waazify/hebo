# Generated by Django 5.1.4 on 2024-12-24 03:06

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AgentSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "core_llm",
                    models.CharField(
                        choices=[
                            ("gpt4o", "GPT-4o"),
                            ("gpt4o_mini", "GPT-4o mini"),
                            ("o1", "o1"),
                            ("o1_mini", "o1 mini"),
                            ("claude_3_5_sonnet", "Claude-3.5-Sonnet"),
                            ("claude_3_5_haiku", "Claude-3.5-Haiku"),
                        ],
                        default="gpt4o",
                        max_length=20,
                    ),
                ),
                (
                    "condense_llm",
                    models.CharField(
                        choices=[
                            ("gpt4o", "GPT-4o"),
                            ("gpt4o_mini", "GPT-4o mini"),
                            ("o1", "o1"),
                            ("o1_mini", "o1 mini"),
                            ("claude_3_5_sonnet", "Claude-3.5-Sonnet"),
                            ("claude_3_5_haiku", "Claude-3.5-Haiku"),
                        ],
                        default="gpt4o_mini",
                        max_length=20,
                    ),
                ),
                (
                    "embeddings",
                    models.CharField(
                        choices=[
                            ("ada002", "text-embedding-ada-002"),
                            ("minilm", "all-MiniLM-L6-v2"),
                            ("mpnet", "all-mpnet-base-v2"),
                            ("bger", "bge-large-en"),
                        ],
                        default="ada002",
                        max_length=20,
                    ),
                ),
                ("delay", models.BooleanField(default=False)),
                ("hide_tool_messages", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Tool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Description of what the tool does"),
                ),
                (
                    "output_template",
                    models.TextField(help_text="Template to format the tool's output"),
                ),
                (
                    "tool_type",
                    models.CharField(
                        choices=[("action", "Action"), ("data_source", "Data Source")],
                        default="action",
                        max_length=20,
                    ),
                ),
                (
                    "openapi_url",
                    models.URLField(
                        blank=True,
                        help_text="OpenAPI URL for Action type tools",
                        null=True,
                    ),
                ),
                (
                    "auth_token",
                    models.CharField(
                        blank=True,
                        help_text="Optional authentication token for API",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "db_connection_string",
                    models.CharField(
                        blank=True,
                        help_text="Database connection string for Data Source type tools",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sql_query",
                    models.TextField(
                        blank=True,
                        help_text="SQL query to execute for Data Source type tools",
                        null=True,
                    ),
                ),
            ],
        ),
    ]
